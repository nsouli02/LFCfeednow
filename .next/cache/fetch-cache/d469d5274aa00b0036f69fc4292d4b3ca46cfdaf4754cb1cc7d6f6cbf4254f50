{"kind":"FETCH","data":{"headers":{"age":"225","cache-control":"max-age=600","connection":"keep-alive","content-encoding":"br","content-type":"application/rss+xml; charset=utf-8","date":"Tue, 12 Aug 2025 11:57:05 GMT","server":"CloudFront","set-cookie":"GS_RESTRICT=0; Path=/","transfer-encoding":"chunked","vary":"Accept-Encoding","via":"1.1 6d3b9fc8696fd9be35ff9d220be7b2a6.cloudfront.net (CloudFront)","x-amz-cf-id":"NmRERILr004Usz5ou-97ygz2OcSjajYFtq1tFa1EKtyWpLfKZcREig==","x-amz-cf-pop":"MRS53-P2","x-cache":"Miss from cloudfront","x-cache-hits":"7","x-removedcookies":"YES","x-served-by":"reg-cache-plus301.tm-aws.com","x-varnish":"303770948 303115368"},"body":"","status":200,"url":"https://www.liverpool.com/?service=rss"},"revalidate":300,"tags":[]}